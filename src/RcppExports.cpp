// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/flanner.h"
#include <Rcpp.h>

using namespace Rcpp;

// fromDataFrame
XPtr<FlannerIndexPair> fromDataFrame(vec2 df, const int maxleaf = 10);
RcppExport SEXP flanner_fromDataFrame(SEXP dfSEXP, SEXP maxleafSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< vec2 >::type df(dfSEXP );
        Rcpp::traits::input_parameter< const int >::type maxleaf(maxleafSEXP );
        XPtr<FlannerIndexPair> __result = fromDataFrame(df, maxleaf);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// lookupKNNDataFrame
DataFrame lookupKNNDataFrame(XPtr<FlannerIndexPair> pair, vec2 points, windows_is_dumb k);
RcppExport SEXP flanner_lookupKNNDataFrame(SEXP pairSEXP, SEXP pointsSEXP, SEXP kSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< XPtr<FlannerIndexPair> >::type pair(pairSEXP );
        Rcpp::traits::input_parameter< vec2 >::type points(pointsSEXP );
        Rcpp::traits::input_parameter< windows_is_dumb >::type k(kSEXP );
        DataFrame __result = lookupKNNDataFrame(pair, points, k);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
